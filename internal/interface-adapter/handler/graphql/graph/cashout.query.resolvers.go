package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"errors"
	"hackbar-copilot/internal/interface-adapter/handler/graphql/graph/model"
	"time"
)

// Cashouts is the resolver for the cashouts field.
func (r *queryResolver) Cashouts(ctx context.Context, input model.InputCashoutQuery) ([]*model.Cashout, error) {
	_, err := r.authAdapter.GetEmail(ctx)
	if /* unauthorized */ err != nil {
		return nil, err
	}
	if !r.authAdapter.HasBartenderRole(ctx) {
		return nil, errors.New("forbidden")
	}

	sinceParsed, err := time.Parse(time.RFC3339, input.Since)
	if err != nil {
		return nil, err
	}
	untilParsed, err := time.Parse(time.RFC3339, input.Until)
	if err != nil {
		return nil, err
	}

	cashouts, err := r.Cashier.ListCashouts(sinceParsed, untilParsed)
	if err != nil {
		return nil, err
	}
	return cashouts_(cashouts).apply(), nil
}
