package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"fmt"
	"hackbar-copilot/internal/domain/order"
	"hackbar-copilot/internal/interface-adapter/handler/graphql/graph/model"
)

// Orders is the resolver for the orders field.
func (r *queryResolver) Orders(ctx context.Context) ([]*model.Order, error) {
	var (
		orders []order.Order
		err    error
	)
	if r.authAdapter.HasBartenderRole(ctx) {
		orders, err = r.Copilot.LatestOrders()
	} else {
		email, err2 := r.authAdapter.GetEmail(ctx)
		if /* unauthorized */ err2 != nil {
			return nil, err2
		}
		orders, err = r.OrderService.ListOrders(order.CustomerID(email))
	}
	if err != nil {
		return nil, fmt.Errorf("failed to list orders: %w", err)
	}

	return r.orderAdapter.Orders(orders), nil
}
