package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"fmt"
	"hackbar-copilot/internal/domain/order"
	"hackbar-copilot/internal/interface-adapter/handler/graphql/graph/model"
)

// UncheckedOrdersCustomer is the resolver for the uncheckedOrdersCustomer field.
func (r *queryResolver) UncheckedOrdersCustomer(ctx context.Context) ([]*model.Order, error) {
	email, err := r.authAdapter.GetEmail(ctx)
	if /* unauthorized */ err != nil {
		return nil, err
	}
	orders, err := r.OrderService.LatestUncheckedOrders(order.CustomerEmail(email))
	if err != nil {
		return nil, fmt.Errorf("failed to list orders: %w", err)
	}

	return r.orderAdapter.Orders(orders), nil
}

// UncheckedOrders is the resolver for the orders field.
func (r *queryResolver) UncheckedOrders(ctx context.Context) ([]*model.Order, error) {
	_, err := r.authAdapter.GetEmail(ctx)
	if /* unauthorized */ err != nil {
		return nil, err
	}
	if !r.authAdapter.HasBartenderRole(ctx) {
		return nil, fmt.Errorf("forbidden")
	}
	orders, err := r.Cashier.LatestUncheckedOrders()
	if err != nil {
		return nil, fmt.Errorf("failed to list orders: %w", err)
	}
	return r.orderAdapter.Orders(orders), nil
}
