package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.55

import (
	"context"
	"hackbar-copilot/internal/interface-adapter/handler/graphql/graph/model"
)

// Recipes is the resolver for the recipes field.
func (r *queryResolver) Recipes(ctx context.Context) ([]*model.RecipeGroup, error) {
	recipeGroups, err := r.deps.Recipes.Find()
	if err != nil {
		return nil, err
	}
	recipeTypes, err := r.deps.Recipes.FindRecipeType()
	if err != nil {
		return nil, err
	}
	glassTypes, err := r.deps.Recipes.FindGlassType()
	if err != nil {
		return nil, err
	}
	return r.deps.convertToModel.RecipeGroups(recipeGroups, recipeTypes, glassTypes), nil
}
