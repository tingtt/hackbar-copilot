package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.64

import (
	"context"
	"hackbar-copilot/internal/domain/order"
	"hackbar-copilot/internal/interface-adapter/handler/graphql/graph/model"
)

// UserInfo is the resolver for the user field.
func (r *queryResolver) UserInfo(ctx context.Context) (*model.User, error) {
	email, err := r.authAdapter.GetEmail(ctx)
	if /* unauthorized */ err != nil {
		return nil, err
	}

	u, err := r.OrderService.GetUserInfo(order.CustomerEmail(email))
	if err != nil {
		if !errors.Is(err, user.ErrNotFound) {
			return nil, err
		}
		return userAdapter(user.User{Email: user.Email(email), Name: ""}).apply(), nil
	}

	return userAdapter(u).apply(), nil
}
